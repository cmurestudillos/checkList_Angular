{"version":3,"sources":["webpack:///src/app/modules/material.module.ts","webpack:///src/app/components/shared/navbar/navbar.component.ts","webpack:///src/app/views/shared/navbar.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/views/home.component.html","webpack:///src/app/routes/app-routing.module.ts","webpack:///src/app/modules/components.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/main.ts"],"names":["MaterialModule","declarations","imports","exports","NavbarComponent","title","appVersion","selector","templateUrl","styleUrls","environment","production","HomeComponent","newTask","tasks","storage","JSON","parse","localStorage","getItem","console","log","deshabilitado","editarTask","item","cadenaTexto","strike","event","taskObjAdd","localTasks","index","length","taskObjEdit","setItem","stringify","completed","push","preventDefault","tarea","splice","i","selectedAll","previousIndex","currentIndex","selected","totalSelected","contador","selectAll","deleteSelectedTasks","dataTask","drop","routes","path","component","pathMatch","redirectTo","AppRoutingModule","forRoot","useHash","ComponentsModule","AppComponent","AppModule","providers","bootstrap","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// Drag & Drop\nimport {DragDropModule} from '@angular/cdk/drag-drop';\n// Hammer.js - soporte para (mat-slide-toggle, mat-slider, matTooltip)\nimport 'hammerjs';\n//Animaciones\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// Angular Material\nimport { \n  MatInputModule, \n  MatButtonModule, \n  MatSelectModule, \n  MatIconModule,\n  MatToolbarModule,\n  MatCheckboxModule,\n  MatMenuModule,\n  MatSnackBarModule\n} from '@angular/material';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    DragDropModule\n  ],\n  exports: [\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    DragDropModule\n  ]  \n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\n// Version de la aplicacion\nimport { version } from '../../../../../package.json';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: '../../../views/shared/navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  title = 'Check List';\n  public appVersion: string = version;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","  <mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n      <!-- Logo -->\n      <img width=\"100\" src=\"../../assets/img/angular_logo.png\" alt=\"Angular\" title=\"Angular\">\n      <!-- Titulo de la Aplicacion -->\n      <h1 class=\"titulo\">{{ title }}</h1>\n      <!-- Info de la aplicacion -->\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n        <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item disabled>\n            <mat-icon>trending_up</mat-icon>\n            <span><i><b>Version: {{ appVersion }}</b></i></span>\n          </button>\n          <button mat-menu-item disabled>\n            <span><i>Copyright © - Carlos Mur</i></span>\n          </button>\n        </mat-menu>\n    </mat-toolbar-row>\n  </mat-toolbar>","export const environment = {\n  production: true\n};\n\n","import { Component } from '@angular/core';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: '../../views/home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent{\n\n  // Variables\n  newTask: string = '';\n  tasks: any = [];\n  taskObjAdd: any;\n  taskObjEdit: any;\n  deshabilitado: boolean;\n  selectedAll: any;\n  selectedNames: any;\n  editarTask: any;\n  storage = JSON.parse(localStorage.getItem('tarea'));\n\n  constructor() {\n    console.log(this.storage)\n    this.tasks = JSON.parse(localStorage.getItem('tarea'));\n    if(this.tasks === 0){\n      this.tasks = [];\n    }\n\n    this.deshabilitado = true;\n    this.editarTask = false;\n  }\n  strikeTask(item){\n\n    console.log(item.newTask);\n    var cadenaTexto = item.newTask;\n    item.newTask = cadenaTexto.strike();\n    \n  }\n  //----------------------------------------------------------------------//\n  // Metodo dataTask: Anadir tareas nuevas a la lista                      //\n  //----------------------------------------------------------------------//\n  dataTask(event) {\n\n    // Log de seguimiento\n    console.log('HomeComponent - Metodo dataTask');\n\n    // Editar Tarea\n    if(this.editarTask){\n\n      // Guardamos la tarea modificada\n      this.taskObjAdd = {\n        newTask: this.newTask,\n      }\n      // console.log(this.taskObjEdit.newTask)\n      // console.log(this.taskObjAdd.newTask);\n      \n      // Obtenemos los datos de la tarea a modificar\n      var localTasks = JSON.parse(localStorage.getItem('tarea'));\n      for (let index = 0; index < localTasks.length; index++) {\n        if(localTasks[index].newTask === this.taskObjEdit.newTask){\n          localTasks[index].newTask= this.taskObjAdd.newTask,\n          // console.log(localTasks);\n\n          // Guardamos la tarea en localStorage\n          localStorage.setItem('tarea', JSON.stringify(localTasks));\n\n          // Deshabilitamos la edicion\n          this.editarTask = false;\n          \n          // recuperamos los datos modificados y los mostramos\n          this.tasks = JSON.parse(localStorage.getItem('tarea'));\n        }\n      }\n    }else{\n      // Añadir Tarea\n      this.taskObjAdd = {\n        newTask: this.newTask,\n        completed: false\n      }\n  \n      // Insertamos la nueva tarea\n      this.tasks.push(this.taskObjAdd);\n  \n      // Guardamos la tarea en localStorage\n      localStorage.setItem('tarea', JSON.stringify(this.tasks));\n      this.storage = this.tasks;\n    }\n\n    this.newTask = '';\n    event.preventDefault();\n\n  }\n  //----------------------------------------------------------------------//\n  // Metodo editTask: Edita una tarea seleccionada                        //\n  //----------------------------------------------------------------------//\n  editTask(tarea, index) {\n\n    // Log de seguimiento\n    console.log('HomeComponent - Metodo editTask');\n\n    this.editarTask = true;\n\n    this.taskObjEdit = {\n      newTask: tarea.newTask,\n    }\n\n    this.newTask = tarea.newTask;\n\n  }  \n  //----------------------------------------------------------------------//\n  // Metodo deleteTask: Eliminar tarea seleccionada                       //\n  //----------------------------------------------------------------------//\n  deleteTask(index) {\n\n    // Log de seguimiento\n    console.log('HomeComponent - Metodo deleteTask');\n\n    this.tasks.splice(index, 1);\n    localStorage.setItem('tarea', JSON.stringify(this.tasks));\n    this.storage = this.tasks;\n  }\n  //----------------------------------------------------------------------//\n  // Metodo deleteSelectedTasks: Eliminar todas las tareas seleccionadas  //\n  //----------------------------------------------------------------------//\n  deleteSelectedTasks() {\n\n    // Log de seguimiento\n    console.log('HomeComponent - Metodo deleteSelectedTasks');\n\n    for(var i=(this.tasks.length -1); i > -1; i--) {\n      if(this.tasks[i].completed) {\n        this.tasks.splice(i, 1);\n        localStorage.setItem('tarea', JSON.stringify(this.tasks));\n      }\n    }\n    this.storage = this.tasks;\n\n    // Deshabilitamos el boton y check\n    this.selectedAll = false;\n    this.deshabilitado = true;\n  }\n  //----------------------------------------------------------------------//\n  // Metodo drop: Cambiar el orden de las tareas mediante Drag/Drop       //\n  //----------------------------------------------------------------------//\n  drop(event: CdkDragDrop<string[]>) {\n\n    // Log de seguimiento\n    console.log('HomeComponent - Metodo drop');\n\n    moveItemInArray(this.tasks, event.previousIndex, event.currentIndex);\n    // Guardamos el nuevo orden\n    localStorage.setItem('tarea', JSON.stringify(this.tasks));\n  }\n  //----------------------------------------------------------------------//\n  // Metodo selectAll: Seleccionar todas las tareas a la vez              //\n  //----------------------------------------------------------------------//\n  selectAll() {\n\n    // Log de seguimiento\n    console.log('HomeComponent - Metodo selectAll');\n\n    this.selectedAll = !this.selectedAll;\n\n    for (var i = 0; i < this.tasks.length; i++) {\n        this.tasks[i].selected = this.selectedAll;\n        this.tasks[i].completed = this.selectedAll;\n    } \n\n    // Guardamos los atributos\n    localStorage.setItem('tarea', JSON.stringify(this.tasks));\n\n    // Validamos para activar o desactivar el boton\n    if(this.selectedAll){\n      this.deshabilitado = false;\n    }else{\n      this.deshabilitado = true;\n    }\n  }\n  //----------------------------------------------------------------------//\n  // Metodo comprobarSiAllSelected: Seleccionar todas las tareas a la vez //\n  //----------------------------------------------------------------------//  \n  comprobarSiAllSelected() {\n\n    // Log de seguimiento\n    console.log('HomeComponent - Metodo selectAll');    \n\n    var totalSelected =  0;\n    var contador = 0;\n    for (var i = 0; i < this.tasks.length; i++) {\n      if(this.tasks[i].selected) totalSelected++;\n      if(this.tasks[i].completed){\n        contador = contador + 1;\n      }\n    } \n    this.selectedAll = totalSelected === this.tasks.length;\n\n    // Guardamos los atributos\n    localStorage.setItem('tarea', JSON.stringify(this.tasks));\n\n    if(contador > 1){\n      this.deshabilitado = false;\n    }else{\n      this.deshabilitado = true;\n    }\n\n    return true;\n  }\n}\n","<div class=\"container\">\n  <div class=\"todos form-wrap\">\n    <!-- Titulo de la Lista -->\n    <h4>Lista de tareas</h4>\n\n      <div class=\"form-field-wrap\">\n        <!-- Acciones a realizar -->\n            <!-- Seleccion de todos los registros -->\n            <button mat-raised-button class=\"app-button m-2\" (click)=\"selectAll()\" [disabled]=\"storage.length === 0\">\n              <span>Seleccionar todas</span>\n            </button>\n            <!-- Boton para eliminar todas las tareas -->\n            <button mat-raised-button class=\"delete-selected\" [disabled]=\"deshabilitado\" (click)=\"deleteSelectedTasks()\">Eliminar seleccionadas</button>\n\n        <!-- Añadir nueva tarea -->\n        <div>\n          <form (submit)=\"dataTask($event)\">\n            <div class=\"row\">\n              <div class=\"col-8\">\n                <mat-form-field  class=\"full-width\">\n                    <input [(ngModel)]=\"newTask\" (keyup.enter)=\"newTask=''\" class=\"textfield\" name=\"newTask\" matInput placeholder=\"Añadir nueva tarea\">\n                  </mat-form-field>\n              </div>\n              <div class=\"col-4\">\n                <button *ngIf=\"!editarTask\" mat-raised-button  type=\"submit\" class=\"add-button mt-2 btn-block\" [disabled]=\"newTask===''\">Añadir</button>\n                <button *ngIf=\"editarTask\" mat-raised-button  type=\"submit\" class=\"edit-button mt-2 btn-block\" [disabled]=\"newTask===''\">Editar</button>\n                <button *ngIf=\"editarTask\" mat-raised-button  class=\"cancel-button mt-2 btn-block\" [disabled]=\"newTask===''\">Cancelar</button>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <!-- Listado de tareas creadas -->\n        <ul cdkDropList (cdkDropListDropped)=\"drop($event)\" class=\"task-list\">\n          <li class=\"example-box\" cdkDrag *ngFor=\"let task of tasks; let i=index\">\n            <div class=\"row w-100\">\n              <div class=\"col-10\">\n                <mat-checkbox class=\"checkbox\" [(ngModel)]=\"task.completed\" (change)=\"comprobarSiAllSelected()\"><span class=\"task-added\" [ngClass]=\"{'checked': task.completed}\">{{ task.newTask }}</span></mat-checkbox>\n              </div>\n              <div class=\"col-2 material-icons\">\n                <i (click)=\"editTask(task, i)\" class=\"edit-icon\">edit</i>\n                <i (click)=\"deleteTask(i)\" class=\"delete-icon\">delete</i>\n              </div>\n            </div>\n          </li> \n        </ul>\n      </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// Componentes\nimport { HomeComponent } from './../components/home/home.component';\n\nconst routes: Routes = [\n  {path: 'home', component: HomeComponent},\n  {path: '**', pathMatch: 'full', redirectTo: 'home'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash:true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// Rutas\nimport { AppRoutingModule } from '../routes/app-routing.module';\nimport { MaterialModule } from '../modules/material.module';\n// Componentes\nimport { NavbarComponent } from '../components/shared/navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    NavbarComponent,\n  ],\n  exports: [\n    NavbarComponent,\n  ],  \n  imports: [\n    CommonModule,\n    AppRoutingModule,\n    MaterialModule\n  ]\n})\nexport class ComponentsModule { }\n","import { Component } from '@angular/core';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'Todo list module';\n}\n\n","<!--The content below is only a placeholder and can be replaced.-->\n<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// Formularios\nimport { FormsModule } from '@angular/forms';\n// Rutas\nimport { AppRoutingModule } from './routes/app-routing.module';\n// Modulos componentes reutilizables/comunes\nimport { MaterialModule } from './modules/material.module';\nimport { ComponentsModule } from './modules/components.module';\n// Componentes\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ComponentsModule,\n    MaterialModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}